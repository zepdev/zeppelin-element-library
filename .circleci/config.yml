version: 2.1
orbs:
  node: circleci/node@2.0.3
  aws-cli: circleci/aws-cli@0.1.11
  aws-s3: circleci/aws-s3@1.0.4
executors:
  node_14:
    docker:
      - image: circleci/node:14

jobs:
  test:
    executor: node_14
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - node/install-packages:
          pkg-manager: yarn
          cache-key: yarn.lock
      - run:
          name: Run all tests
          command: yarn test
      - persist_to_workspace:
          root: .
          paths: coverage

  sonarqube:
    executor: node_14
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - node/install-packages:
          pkg-manager: yarn
          cache-key: yarn.lock
      - run:
          name: Generate eslint report
          command: yarn lint:sonarqube
      - restore_cache:
          keys:
            - sonar-scanner-{{ .Branch }}
            - sonar-scanner
      - run:
          name: Run sonar scanner
          command: yarn sonar-scanner -Dsonar.login=$SONAR_LOGIN || true
      - save_cache:
          key: sonar-scanner-{{ .Branch }}
          paths:
            - /home/circleci/.sonar

  build:
    executor: node_14
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - node/install-packages:
          pkg-manager: yarn
          cache-key: yarn.lock
      - run:
          name: Convert guidelines to SCSS
          command: yarn convert
      - run:
          name: Build build dir
          command: yarn build
      - persist_to_workspace:
          root: .
          paths: build

  bundle:
    executor: node_14
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - node/install-packages:
          pkg-manager: yarn
          cache-key: yarn.lock
      - run:
          name: Create bundle
          command: yarn bundle
      - persist_to_workspace:
          root: .
          paths: bundle

  release:
    executor: node_14
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - node/install-packages:
          pkg-manager: yarn
          cache-key: yarn.lock
      - run:
          name: release
          command: yarn semantic-release || true

  deploy:
    parameters:
      bucket:
        description: 'Target bucket name where the build should be copied'
        default: ''
        type: string
      aws_region:
        description: 'The AWS region where the infrastructure is'
        default: 'eu-central-1'
        type: string
      cloudfront_distribution:
        description: 'The CloudFront Distribution caching the site'
        default: ''
        type: string
    executor: aws-cli/default
    environment:
      AWS_REGION: << parameters.aws_region >>
    steps:
      - checkout # check out the code in the project directory
      - attach_workspace:
          at: ~/project
      - aws-s3/sync:
          from: bundle
          to: 's3://<< parameters.bucket >>/zel/${CIRCLE_TAG/v/}/js'
          arguments: --exclude "*" --include "*.js" --include "*.js.gz"
          overwrite: true
      - aws-s3/sync:
          from: bundle
          to: 's3://<< parameters.bucket >>/zel/${CIRCLE_TAG/v/}/css'
          arguments: --exclude "*" --include "*.css"
          overwrite: true
      - aws-s3/sync:
          from: assets/fonts
          to: 's3://<< parameters.bucket >>/zel/${CIRCLE_TAG/v/}/assets/fonts'
          overwrite: true
      - aws-s3/sync:
          from: assets/icons
          to: 's3://<< parameters.bucket >>/zel/${CIRCLE_TAG/v/}/assets/icons'
          overwrite: true
      - aws-s3/sync:
          from: assets/logos
          to: 's3://<< parameters.bucket >>/zel/${CIRCLE_TAG/v/}/assets/logos'
          overwrite: true
      - aws-s3/sync:
          from: assets/sketch
          to: 's3://<< parameters.bucket >>/zel/${CIRCLE_TAG/v/}/assets/sketch'
          overwrite: true
      - run:
          name: Invalidate CloudFront Distribution Cache
          command: |
            aws cloudfront create-invalidation \
            --distribution-id << parameters.cloudfront_distribution >> \
            --paths "/*"

workflows:
  version: 2
  test_build_bundle_release_deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/

      - sonarqube:
          context: zds
          requires:
            - test
          filters:
            branches:
              only:
                - development
                - main
            tags:
              only: /^v.*/

      - build:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/

      - bundle:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/

      - release:
          context: zds
          requires:
            - bundle
          filters:
            branches:
              only:
                - main
            tags:
              only: /^v.*/

      - deploy: # deployment step for live environment
          bucket: com.zeppelin.zds.assets
          aws_region: eu-central-1
          cloudfront_distribution: E3BEUB4XQDLXXN
          context: zds
          requires:
            - release
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
