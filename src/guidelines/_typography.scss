@mixin generateTypoClassFromMap($displayMap) {
  // iterate through $displayMap and generate display typo classes
  @each $className, $classMap in $displayMap {
    .#{$className} {
      // iterate through class map and write css properties
      @each $cssProp, $cssValue in $classMap {
        // create breakpoints
        @if $cssProp == 'breakpoint' {
          //iterate through breakpoint map and write media query for each breakpoint
          @each $breakpointSize, $breakpointMap in $cssValue {
            @include breakpoint--max(#{$breakpointSize}) {
              // iterate through $breakpointMap
              @each $breakpointProp, $breakpointValue in $breakpointMap {
                // write standard css props
                #{$breakpointProp}: #{$breakpointValue};
              }
            }
          }
        } @else {
          // write standard css props
          #{$cssProp}: #{$cssValue};
        }
      }
    }
  }
}

@mixin typography {
  @include generateTypoClassFromMap(
    get('typography.headings.display', $guidelines)
  );
  @include generateTypoClassFromMap(
    get('typography.headings.headline', $guidelines)
  );
  @include generateTypoClassFromMap(
    get('typography.headings.headline_alt', $guidelines)
  );
  @include generateTypoClassFromMap(
    get('typography.headings.section-header', $guidelines)
  );
  @include generateTypoClassFromMap(get('typography.body', $guidelines));
  @include generateTypoClassFromMap(get('typography.menu', $guidelines));
}

@include exports('typography') {
  @include typography;
}
