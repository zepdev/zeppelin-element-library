// this grid should be only implemented on full browser with elements!

// values: colums, margin, gutter
$grid-values-map: (
  xs: (
    6,
    32px,
    32px
  ),
  s: (
    6,
    48px,
    32px
  ),
  m: (
    8,
    64px,
    32px
  ),
  l: (
    12,
    64px,
    32px
  ),
  xl: (
    12,
    auto,
    32px
  )
);

$h-margin: 24px;
$max-h-margin: 64px;

.#{$prefix}grid {
  position: relative;
  display: flex;
  flex-direction: column;
  margin-left: $h-margin;
  margin-right: $h-margin;

  // set horizontal margin of grid container
  @each $screensize, $valuelist in $grid-values-map {
    @include breakpoint--min(#{$screensize}) {
      $margin: nth($valuelist, 2);
      margin-left: $margin;
      margin-right: $margin;

      // !! this grid should be only implemented on full browser with elements!
      @if $margin == auto {
        min-width: calc(
          #{map-get($min-screensize-map, $screensize)}px -
            (#{$max-h-margin} * 2)
        );
      } @else {
        min-width: calc(
          #{map-get($min-screensize-map, $screensize)}px - (#{$margin} * 2)
        );
      }
    }
  }

  // get grid max screen with from style-basics/_breakpoints.scss
  max-width: #{map-get($min-screensize-map, xl)}px;

  &:after,
  &:before {
    content: '';
    display: block;
    clear: left;
  }
}

.#{$prefix}grid--no-h-margin {
  $h-margin: 0;
  margin-left: $h-margin;
  margin-right: $h-margin;
}

.#{$prefix}grid__row {
  display: block;
  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  background-color: red;

  &:after,
  &:before {
    content: '';
    display: block;
    clear: left;
  }
}

.#{$prefix}grid__col {
  // float is only for non flexbox browsers and overwritten by flexbox in modern browsers
  position: relative;
  display: block;
  float: left;
  flex-shrink: 1;
  background-color: lime;
  border: 1px solid red;
}

$max-cols: 12;
$min-cols: 4;

// set col width
@for $i from 1 through $max-cols {
  .#{$prefix}grid__col--#{$i} {
    $cols: $min-cols;

    // -1px = floor calculated percentages workaround for IE9+
    width: calc((100% - 1px) / #{$cols} * #{$i});

    @supports (display: flex) {
      width: calc(100% / #{$cols} * #{$i});
    }

    @each $screensize, $valuelist in $grid-values-map {
      @include breakpoint--min(#{$screensize}) {
        $cols: nth($valuelist, 1);

        // -1px = floor calculated percentages workaround for IE9+
        width: calc((100% - 1px) / #{$cols} * #{$i});

        @supports (display: flex) {
          width: calc(100% / #{$cols} * #{$i});
        }
      }
    }
  }
}
