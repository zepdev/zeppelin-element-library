// Note map-deep-get won't accept variables that have color names in strings (ie 'yellow') as they are already reserved in SASS. It will cause a map-get error: argument `$map` of `map-get($map, $key)` must be a map.
// so for map get of the json: 'yellow': { primary: "#FFCC00"}
// you cannot do: map-get-deep($guidelines, 'yellow', 'primary')
//instead you must do: map-get-deep($guidelines, yellow, 'primary')

$color_themes: (
  indigo: (
    primary: map-deep-get($guidelines, 'theme', indigo, 'primary'),
    hover: map-deep-get($guidelines, 'theme', indigo, 'secondary'),
    secondary: map-deep-get($guidelines, 'theme', indigo, 'primary'),
    buttonText: map-deep-get($guidelines, 'color', 'global', white),
    buttonTextHover: map-deep-get($guidelines, 'color', 'global', white),
    tagHover: map-deep-get($guidelines, 'theme', indigo, 'secondary')
  ),
  yellow: (
    primary: map-deep-get($guidelines, 'theme', yellow, 'primary'),
    hover: map-deep-get($guidelines, 'theme', yellow, 'secondary'),
    secondary: map-deep-get($guidelines, 'theme', yellow, 'tertiary'),
    buttonText: map-deep-get($guidelines, 'color', 'font'),
    buttonTextHover: map-deep-get($guidelines, 'color', 'global' darkGray),
    tagHover: map-deep-get($guidelines, 'theme', yellow, 'tertiary')
  ),
  red: (
    primary: map-deep-get($guidelines, 'theme', red, 'primary'),
    hover: map-deep-get($guidelines, 'theme', red, 'secondary'),
    secondary: map-deep-get($guidelines, 'theme', red, 'tertiary'),
    buttonText: map-deep-get($guidelines, 'color', 'global', white),
    buttonTextHover: map-deep-get($guidelines, 'color', 'global', white),
    tagHover: map-deep-get($guidelines, 'theme', red, 'tertiary')
  ),
  blue: (
    primary: map-deep-get($guidelines, 'theme', blue, 'primary'),
    hover: map-deep-get($guidelines, 'theme', blue, 'secondary'),
    secondary: map-deep-get($guidelines, 'theme', blue, 'primary'),
    buttonText: map-deep-get($guidelines, 'color', 'global', white),
    buttonTextHover: map-deep-get($guidelines, 'color', 'global', white),
    tagHover: map-deep-get($guidelines, 'theme', blue, 'secondary')
  )
);

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin themify($color_themes: $color_themes, $selector: '.theme-$color &') {
  @each $color, $map in $color_themes {
    #{str-replace($selector, '$color', $color)} {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($color_themes, $color), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }

      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
