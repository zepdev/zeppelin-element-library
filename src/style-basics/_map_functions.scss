////////////////////////////////////////////////////////////
// A collection of map functions
////////////////////////////////////////////////////////////

// Reverses the order of a SASS map
//
// @param {Object} $map - original map
// @return {Object} - reversed map
@function mapReverse($map) {
  $result: null;

  @if type-of($map) == 'map' {
    $keys: map-keys($map);
    $map-reversed: ();

    @for $i from length($keys) through 1 {
      $map-reversed: map-merge(
        $map-reversed,
        (
          nth($keys, $i): map-get($map, nth($keys, $i)),
        )
      );
    }

    @if type-of($map-reversed) == 'map' {
      $result: $map-reversed;
    } @else {
      @warn 'There was an error reversing the order of "#{$map}"';
    }
  } @else {
    @warn '"#{$map}" is not a valid map';
  }

  @return $result;
}

// ---------------------------------------------------------
// author: Nenad Novaković - https://github.com/dvlden/differs
//
// map-deep-check
// Check if nested map has a value by the keys
//
// Required arguments:
// `$map` Map
// `$keys` String(s)
//
// Example of use:
// map-deep-check($nested-map, 'key-1', 'key-2')
//
// @return Bool
// ---------------------------------------------------------
@function map-deep-check($map, $keys...) {
  @if type-of($map) != 'map' {
    @error 'The argument $map: `#{$map}` is of incorrect type: `#{type-of($map)}`. Type of `Map` is required!';
  }

  @each $key in $keys {
    @if not map-has-key($map, $key) {
      @return false;
    }

    $map: map-get($map, $key);
  }

  @return true;
}

// ---------------------------------------------------------
// author: Nenad Novaković - https://github.com/dvlden/differs
//
// map-deep-get
// Get a value from nested map by the keys
//
// Required arguments:
// `$map` Map
// `$keys` String(s)
//
// Example of use:
// map-deep-get($dfr-spacing, 'xs', 'y')
//
// @return Unspecified (it may return anything as a result)
// ---------------------------------------------------------
@function map-deep-get($map, $keys...) {
  @if type-of($map) != 'map' {
    @error 'The argument $map: `#{$map}` is of incorrect type: `#{type-of($map)}`. Type of `Map` is required!';
  }

  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}

// ---------------------------------------------------------
// author: Nenad Novaković - https://github.com/dvlden/differs
// date: 11 Jun 2018
//
// get
// Search for any value contained within nested maps, by using
// dot notation as the key argument
//
// Required arguments:
// `$key` String
//
// Example of use:
// get('border.radius.xs')
//
// Dependencies:
// map-deep-check, map-deep-get, str-explode
//
// @return Anything
// ---------------------------------------------------------
@function get($key, $map) {
  $keys: str-explode($key, '.');

  @if not map-deep-check($map, $keys...) {
    @error 'The argument $map: `#{$map}` doesn\'t has some of the $keys: `#{$keys}`!';
  }

  @return map-deep-get($map, $keys...);
}
